<Activity mc:Ignorable="sap sap2010" x:Class="ExtractAndRead_Attachments" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/ocr" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_EmailToExtract" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="in_dct_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="out_ExtractedData" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1352,5656</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExtractAndRead_Attachments_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Responsible for reading all attachments from an email, regardless of supported type (.pdf, .xlsx, .TIF) &#xD;&#xA;All info is stored into a Dictionary with the filename as the key, this is so the report can be filled out with the file name." DisplayName="ExtractAndRead_Attachments" sap:VirtualizedContainerService.HintSize="668.8,5591.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ExtractedData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="627.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;ExtractAndRead_Attachments started...&quot;]" />
    <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" FolderPath="[in_dct_Config(&quot;TempFilePath&quot;)]" sap:VirtualizedContainerService.HintSize="627.2,88" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[in_EmailToExtract]" OverwriteExisting="False" />
    <Assign sap:VirtualizedContainerService.HintSize="627.2,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_ExtractedData]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence sap2010:Annotation.AnnotationText="Extracts all data from PDF files, regardless if there are pictures or text in the file." DisplayName="Extract and read PDF Attachments" sap:VirtualizedContainerService.HintSize="627.2,1743.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachFileX sap2010:Annotation.AnnotationText="Reads every PDF file in the Temp folder" DisplayName="For Each PDF File in Folder" Filter="*.pdf" Folder="[in_dct_Config(&quot;TempFilePath&quot;)]" sap:VirtualizedContainerService.HintSize="585.6,1619.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="552,1353.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="CurrentReadFile" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadTextFile sap2010:Annotation.AnnotationText="Reads the PDF file and assigns info to ExtractedData" Content="[ExtractedData]" DisplayName="Read Text File" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="510.4,112" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadTextFile>
              <If sap2010:Annotation.AnnotationText="If the current file contains no text (empty string), the process switches to OCR." Condition="[String.IsNullOrWhiteSpace(CurrentReadFile)]" DisplayName="If CurrentFile Contains no text" sap:VirtualizedContainerService.HintSize="510.4,964.8" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="True Sequence" sap:VirtualizedContainerService.HintSize="475.2,744.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open Current File" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                    <uix:NApplicationCard sap2010:Annotation.AnnotationText="Uses OCR to read the PDF file" AttachMode="ByInstance" CloseMode="Always" DisplayName="Use Application: Adobe Acrobat Reader" sap:VirtualizedContainerService.HintSize="433.6,524" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" ScopeGuid="1af33483-e9b0-4b46-b81d-ccca728b16cd" Version="V1">
                      <uix:NApplicationCard.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Read all text" sap:VirtualizedContainerService.HintSize="375.2,201.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetFullText IgnoreHidden="{x:Null}" DisplayName="Get Full Text From Image PDF" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="GetFullText_1">
                              <ui:GetFullText.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="31f0e9c7-1716-40e8-b19c-7b3ace0ac435" InformativeScreenshot="a3302e302c2e16b8a21786bae881dc8d" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' omit:title='pdf17759820190919071921.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;&lt;wnd omit:aaname='*' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetFullText.Target>
                              <ui:GetFullText.Text>
                                <OutArgument x:TypeArguments="x:String">[ExtractedData]</OutArgument>
                              </ui:GetFullText.Text>
                            </ui:GetFullText>
                          </Sequence>
                        </ActivityAction>
                      </uix:NApplicationCard.Body>
                      <uix:NApplicationCard.TargetApp>
                        <uix:TargetApp Area="452, 230, 1348, 728" FilePath="C:\Program Files\Adobe\Acrobat DC\Acrobat\acrobat.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAJPSURBVFhH1ZY9aBRBFMevUVCUKIliOPHjEPzIkTRiOAWxSBobLawU7MQ2aBdFBBHkIHiFVjYhcGijyNkIKS5dIHCQSs6rQgq90mZvd7Z5vv9bNu7ODHGyN5xY/Jh9b96895+Zt8uWiOifYjjisdIRZo2hIdhiFvTcNgwHL1yLz45vD1a/UhAEe+fnD4oWH/2KJ/YFkos3pNfIYjh4AYUfP9iT74HBxjrFE/sHnG9zNxGGAwJsCYvgIsJw+BQA/iYiZwBXAdHrV0nDTR6k4HvXGpOSiJCeeK7XyxnAVYCaqVD4fkVERIuPrTFZwjdL2xy7pdfLGcBVQDx1SkZ15RKp+3eMeQN+O5Bbr5czgPMJzNcobNQlKU7CFqPjVUD47i3FJw6QOnfcOm/DqwA0HmJdmjDFqwA0nrp7m9TVaVK35qwxOl4FqDPjcvdhe5Xi8iFS5yelMePyYSmk5rhHvnzKrfEiIHr5TJLL/d+8TqpyLCl48eSfq+BRTma6kls7lAB8eNTpo0nR2SlS12bkGvAm4BSihYeJKBRm0BvqxuVcjsIC5K65MHYWvXiadL6t8TCP3nhwTwTr84UFwBc94cT8wcEzXkE9xoXCAnAC8GPntp25UliAL/5/AdVqVajX6zt2rVajVqtlzNnwIqDf78uY2r1eT0Skvt3wIgAFswLSMQWnkV2TxYsA7LbZbO7YnU5ntCeg2yjebrdHI2BYnAXgJ9KWYBjkx9RRwGd1odwddL9ZExUBuZCTcy/r9XJGCgc2oNYzDVstwzFqrM7RQaXfNljUiwb3UnIAAAAASUVORK5CYII=" InformativeScreenshot="b05f6a6151e0f5ab7c0e231779922059.png" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' omit:title='Arrival Notice - S00535259  - ULD - Air Freight.PDF - Adobe Acro*' /&gt;" />
                      </uix:NApplicationCard.TargetApp>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uix:NApplicationCard>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <Assign sap2010:Annotation.AnnotationText="Assigns the extracted data to the outgoing argument" DisplayName="Assign out argument" sap:VirtualizedContainerService.HintSize="510.4,104" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_ExtractedData(CurrentFile.Name)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[ExtractedData]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachFileX>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Extracts and reads all the TIF files in the Temp folder" DisplayName="Extract and read TIF Files" sap:VirtualizedContainerService.HintSize="627.2,975.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachFileX DisplayName="For Each TIF File in Folder" Filter="*.TIF" Folder="[in_dct_Config(&quot;TempFilePath&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,851.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence sap2010:Annotation.AnnotationText="Load the image into the robot, and extract the data, afterwards, delete the image from the robot again (the image isnt purged after use, must be done manually)" DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,616.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:Image" Name="ExtractedImage" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LoadImage DisplayName="Load Image" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="333.6,85.6" sap2010:WorkflowViewState.IdRef="LoadImage_1" Image="[ExtractedImage]" />
              <p:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" UseLocalServer="{x:Null}" sap2010:Annotation.AnnotationText="Reads the Image file" ApiKey="rTbToOJgEbmBIYziHoltDUGYe4FfVp/WrKH0YYbeeEQblmccG8Hu39NX72r1/4Z8DL8dqNA4AbFrSFvEGtFwgA==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="333.6,53.6" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Image="[ExtractedImage]" Language="auto" Profile="None" Scale="1" Text="[ExtractedData]" Timeout="100000">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:UiPathDocumentOCR>
              <Assign DisplayName="Assign Extracted data to out arg" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_ExtractedData(CurrentFile.Name)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[ExtractedData]</InArgument>
                </Assign.Value>
              </Assign>
              <Sequence sap2010:Annotation.AnnotationText="Unloads the image from the robot's memory, UiPath does not do this automatically, and I found this method online." DisplayName="Unload Image" sap:VirtualizedContainerService.HintSize="333.6,144.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="236.8,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Dispose">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="ui:Image">[ExtractedImage]</InArgument>
                  </InvokeMethod.TargetObject>
                </InvokeMethod>
                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="236.8,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Collect" TargetType="s:GC" />
                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="236.8,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="WaitForPendingFinalizers" TargetType="s:GC" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
      </ui:ForEachFileX>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Reads and extracts all excel files by opening them as Datatables, and converting those to strings." DisplayName="Read and Extract all excel files" sap:VirtualizedContainerService.HintSize="627.2,1577.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachFileX DisplayName="For Each Excel File in Folder" Filter="*.xlsx" Folder="[in_dct_Config(&quot;TempFilePath&quot;)]" sap:VirtualizedContainerService.HintSize="508.8,1440.8" sap2010:WorkflowViewState.IdRef="ForEachFileX_3" IncludeSubDirectories="False" OrderBy="NameAscFirst">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Process Excel File" sap:VirtualizedContainerService.HintSize="475.2,1206.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:List(x:String)" Name="Sheets" />
                <Variable x:TypeArguments="x:String" Name="TempSheetContentHolder" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,256" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[CurrentFile.FullName]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:Annotation.AnnotationText="Extracts all sheets from the Workbook" DisplayName="Retrieve all Sheets" sap:VirtualizedContainerService.HintSize="241.6,146.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[Sheets]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
              <Assign sap2010:Annotation.AnnotationText="Initialize TempSheetContentHolder" DisplayName="Assign nothing" sap:VirtualizedContainerService.HintSize="433.6,91.2" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[TempSheetContentHolder]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[nothing]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Sheet in Sheets" sap:VirtualizedContainerService.HintSize="433.6,526.4" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Sheets]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="Sheet" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Per Sheet" sap:VirtualizedContainerService.HintSize="375.2,401.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="dt_Extracted" />
                        <Variable x:TypeArguments="x:String" Name="ExtractedString" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReadRange AddHeaders="True" DataTable="[dt_Extracted]" DisplayName="Read Full Sheet" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[Sheet.ToString]" WorkbookPath="[CurrentFile.FullName]">
                        <ui:ReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ReadRange.Range>
                      </ui:ReadRange>
                      <ui:OutputDataTable DataTable="[dt_Extracted]" DisplayName="Output Sheet as String" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[ExtractedString]" />
                      <Assign DisplayName="Add the sheet data to Variable" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[TempSheetContentHolder]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[TempSheetContentHolder + ExtractedString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <Assign sap2010:Annotation.AnnotationText="Assigns the data from all the sheets to a key/value pair, the key being the Workbook file." DisplayName="Assign TempSheetContentHolder" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_ExtractedData(CurrentFile.Name)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[TempSheetContentHolder]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
      </ui:ForEachFileX>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Deletes all the files that have been extracted and read so the files from a new email can be handled." DisplayName="Delete all Temp files" sap:VirtualizedContainerService.HintSize="627.2,544.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachFileX DisplayName="For Each File in Temp" Folder="[in_dct_Config(&quot;TempFilePath&quot;)]" sap:VirtualizedContainerService.HintSize="459.2,408" sap2010:WorkflowViewState.IdRef="ForEachFileX_4" IncludeSubDirectories="False" OrderBy="NameAscFirst">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Delete the file" sap:VirtualizedContainerService.HintSize="425.6,173.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="384,80.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[CurrentFile.FullName]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
      </ui:ForEachFileX>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="627.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;ExtractAndRead_Attachments finished...&quot;]" />
  </Sequence>
</Activity>